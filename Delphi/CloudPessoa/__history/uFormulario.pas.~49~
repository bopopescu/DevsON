unit uFormulario;

interface

uses
  Winapi.Windows,
  Winapi.Messages,
  System.SysUtils,
  System.Variants,
  System.Classes,
  Vcl.Graphics,
  Vcl.Controls,
  Vcl.Forms,
  Vcl.Dialogs,
  System.Generics.Collections,
  Vcl.StdCtrls,
  Vcl.ExtCtrls,
  Vcl.ComCtrls,
  DBClient,
  Data.DB, Vcl.Grids,
  Vcl.DBGrids,
  Cloud.Controller,
  Cloud.Dto.Pessoa;

type
  TfFormulario = class(TForm)
    CampoID: TEdit;
    CampoNome: TEdit;
    LabelCodigo: TLabel;
    LabelNome: TLabel;
    LabelSenioridade: TLabel;
    LabelDataNascimento: TLabel;
    LabelCorUniforme: TLabel;
    DBGrid1: TDBGrid;
    DataSource: TDataSource;
    CDS_PESSOAS: TClientDataSet;
    CDS_PESSOASNome: TStringField;
    DBGrid2: TDBGrid;
    btnAddPessoa: TButton;
    CampoIdentidade: TEdit;
    CampoCPF: TEdit;
    CampoTelefone: TEdit;
    CampoEmail: TEdit;
    btnDelPessoa: TButton;
    btnAtualizarPessoa: TButton;
    btnCadEndereco: TButton;
    btnEnvioEmail: TButton;
    edtEmailDestino: TEdit;
    pnlTitulo: TPanel;
    lblTitulo: TLabel;
    Panel1: TPanel;
    DS_ENDERECOS: TDataSource;
    CDS_ENDERECOS: TClientDataSet;
    StringField1: TStringField;
    procedure FormCreate(Sender: TObject);
    procedure CDS_PESSOASAfterScroll(DataSet: TDataSet);
    procedure FormDestroy(Sender: TObject);
    procedure btnAddPessoaClick(Sender: TObject);
    procedure btnDelPessoaClick(Sender: TObject);
    procedure btnAtualizarPessoaClick(Sender: TObject);
    procedure btnCadEnderecoClick(Sender: TObject);
    procedure btnEnvioEmailClick(Sender: TObject);
    procedure CDS_ENDERECOSAfterScroll(DataSet: TDataSet);
  private
    FListaFuncionarios: TObjectList<TCloudPessoa>;

    procedure PreencherCampos(Funcionario: TCloudPessoa);
  end;

var
  fFormulario: TfFormulario;

implementation

uses
  System.RTTI;

{$R *.dfm}

procedure TfFormulario.btnAddPessoaClick(Sender: TObject);
begin
   if TCloudController.New.AddPessoa(FListaFuncionarios) then
   begin
      TCloudController.New.PreencherDataSet(ClientDataSet,FListaFuncionarios);
   end;
end;

procedure TfFormulario.btnDelPessoaClick(Sender: TObject);
begin
   if FListaFuncionarios[Pred(ClientDataSet.RecNo)].ID > 0 then
   begin
      if TCloudController.New.DeletePessoa(FListaFuncionarios,FListaFuncionarios[Pred(ClientDataSet.RecNo)].ID) then
      begin
         TCloudController.New.PreencherDataSet(ClientDataSet,FListaFuncionarios);
      end;

   end;
end;

procedure TfFormulario.btnEnvioEmailClick(Sender: TObject);
begin
   if edtEmailDestino.Text = '' then
   begin
      ShowMessage('Por favor insira um e-mail válido');
      Exit;
   end;

   if FListaFuncionarios[Pred(ClientDataSet.RecNo)].ID > 0 then
   begin
      if TCloudController.New.EnviarEmail(FListaFuncionarios[Pred(ClientDataSet.RecNo)],
                                        edtEmailDestino.Text) then
         ShowMessage('E-mail enviado com sucesso para: ' + edtEmailDestino.Text)
      else
         ShowMessage('Não foi possível Enviar a Mensagem');

   end;
end;

procedure TfFormulario.btnAtualizarPessoaClick(Sender: TObject);
begin
   if TCloudController.New.UpdatePessoa(FListaFuncionarios,FListaFuncionarios[Pred(ClientDataSet.RecNo)].ID) then
   begin
      TCloudController.New.PreencherDataSet(ClientDataSet,FListaFuncionarios);
   end;
end;

procedure TfFormulario.btnCadEnderecoClick(Sender: TObject);
begin
   if TCloudController.New.CadastrarEndereco(FListaFuncionarios,FListaFuncionarios[Pred(ClientDataSet.RecNo)].ID) then
   begin
      TCloudController.New.PreencherDataSet(ClientDataSet,FListaFuncionarios);
   end;
end;

procedure TfFormulario.CDS_ENDERECOSAfterScroll(DataSet: TDataSet);
begin
//
end;

procedure TfFormulario.CDS_PESSOASAfterScroll(DataSet: TDataSet);
begin
  // Chama o método para preencher os controles visuais da tela,
  // informando o objeto posicionado no índice "RecNo - 1" do ClientDataSet
  PreencherCampos(FListaFuncionarios[Pred(ClientDataSet.RecNo)]);
end;

procedure TfFormulario.FormCreate(Sender: TObject);
begin
   TCloudController.New.CriarCliente(FListaFuncionarios);

  // Popula o ClientDataSet com os funcionários cadastrados
   TCloudController.New.PreencherDataSet(ClientDataSet,FListaFuncionarios);
end;

procedure TfFormulario.FormDestroy(Sender: TObject);
begin
  FListaFuncionarios.Free;
end;

procedure TfFormulario.PreencherCampos(Funcionario: TCloudPessoa);
var
  Contexto: TRttiContext;
  Tipo: TRttiType;
  Propriedade: TRttiProperty;
  Valor: variant;
  Componente: TComponent;
begin
  // Cria o contexto do RTTI
  Contexto := TRttiContext.Create;

  // Obtém as informações de RTTI da classe TFuncionario
  Tipo := Contexto.GetType(TCloudPessoa.ClassInfo);

  try
    // Faz uma iteração nas propriedades do objeto
    for Propriedade in Tipo.GetProperties do
    begin
      // Obtém o valor da propriedade
      Valor := Propriedade.GetValue(Funcionario).AsVariant;

      // Encontra o componente relacionado, como, por exemplo, "CampoNome"
      Componente := FindComponent('Campo' + Propriedade.Name);

      // (Código e nome)
      // Testa se o componente é da classe "TEdit" para acessar a propriedade "Text"
      if Componente is TEdit then
        (Componente as TEdit).Text := Valor;

      // (Estado Civil)
      // Testa se o componente é da classe "TComboBox" para acessar a propriedade "ItemIndex"
      if Componente is TComboBox then
        (Componente as TComboBox).ItemIndex := (Componente as TComboBox).Items.IndexOf(Valor);

      // (Sexo)
      // Testa se o componente é da classe "TRadioGroup" para acessar a propriedade "ItemIndex"
      if Componente is TRadioGroup then
        (Componente as TRadioGroup).ItemIndex := (Componente as TRadioGroup).Items.IndexOf(Valor);

//      // (Plano de Saúde)
//      // Testa se o componente é da classe "TCheckBox" para acessar a propriedade "Checked"
      if Componente is TCheckBox then
        (Componente as TCheckBox).Checked := Valor;

      // (Senioridade)
      // Testa se o componente é da classe "TTrackBar" para acessar a propriedade "Position"
      if Componente is TTrackBar then
        (Componente as TTrackBar).Position := Valor;

      // (Data de Nascimento)
      // Testa se o componente é da classe "TDateTimePicker" para acessar a propriedade "Date"
      if Componente is TDateTimePicker then
        (Componente as TDateTimePicker).Date := Valor;

//      // (Cor do Uniforme)
//      // Testa se o componente é da classe "TShape" para acessar a propriedade "Brush.Color"
      if Componente is TShape then
        (Componente as TShape).Brush.Color := Valor;
    end;
  finally
    Contexto.Free;
  end;
end;


end.
